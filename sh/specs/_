#!/usr/bin/env zsh
#
# === {{CMD}}
#
set -u -e -o pipefail

local +x ORIGINAL_ARGS="$@"

if [[ -z "$@" ]]; then
  local +x ACTION="watch"
else
  local +x ACTION="$1"; shift
fi

case "$(echo $ACTION $@ | xargs echo)" in
  watch|"watch "*)
    export CONTROLLER_PID=$$
    local +x CMD="da_standard.jspp specs run $@"
    ${=CMD} || sh_color RED "=== {{FAILED}}: BOLD{{$?}}"
    process watch "-r sh -r bin -r lib -r specs" $CMD
    ;;

  "run "*)
    reset
    local +x FILE="$@"
    local +x SPECS="tmp/specs.jspp"

    cd "$THIS_DIR"
    mkdir -p tmp
    sh_color ORANGE "=== {{Compiling}}..."
    echo "" > $SPECS

    local +x TOP="import System;";
    local +x BOTTOM="";

    for LIB_FILE in $(echo lib/*.jspp) ; do
      local +x LIB_NAME="$(basename "$LIB_FILE" .jspp)"
      local +x FULL_NAME="DA_STANDARD.$(basename $FILE .jspp | tr '[a-z]' '[A-Z]')"
      if [[ "$LIB_NAME" == "$FILE" ]]; then
        TOP+="\nimport $FULL_NAME;"
        for func in $(egrep -woh '[^\ ]+_specs\(\ *\)' "$LIB_FILE"); do
          BOTTOM+="\n\nConsole.log(\"=== $func ===\");"
          BOTTOM+="\n${FULL_NAME}.${func};"
          BOTTOM+="\nConsole.log(\"\");"
        done
      fi
    done

    echo "$TOP" >> $SPECS
    echo "$BOTTOM" >> $SPECS
    my_jspp __ lib/${FILE}.jspp lib/common.jspp lib/string.jspp lib/specs.jspp "$SPECS" -o tmp/specs.js

    sh_color ORANGE "=== {{Running}}..."
    node tmp/specs.js
    sh_color GREEN "=== {{DONE}} ===";
    ;;

  run-server)
    mkdir -p tmp/out tmp/in
    sh_color ORANGE "=== {{Compiling}} server..."
    my_crystal __ build specs/browser-specs/server.cr -o tmp/out/da_standard.server
    pkill -f tmp/out/da_standard.server || :
    sh_color ORANGE "=== {{Running}} server..."
    tmp/out/da_standard.server
    ;;

  run)
    reset
    local +x FILES="$(find lib -maxdepth 1 -type f -name '*.jspp')"
    local +x SPECS="tmp/specs.jspp"

    cd "$THIS_DIR"
    mkdir -p tmp

    sh_color ORANGE "=== {{Compiling}}..."
    echo "" > $SPECS

    local +x TOP="import System; external window;";
    local +x BOTTOM="";

    for FILE in ${=FILES}; do
      local +x LIB_NAME="$(basename "$FILE" .jspp)"
      local +x FULL_NAME="DA_STANDARD.$(basename $FILE .jspp | tr '[a-z]' '[A-Z]')"
      case "$LIB_NAME" in
        DOM|browser)
          TOP+="\nimport $FULL_NAME;"
          for func in $(egrep -woh '^\ +[^\ ]+_specs\(\ *\)' "$FILE"); do
            BOTTOM+="\nif (typeof window !== 'undefined' ) {\n"
            BOTTOM+="\n\nConsole.log(\"=== $func ===\");"
            BOTTOM+="\n${FULL_NAME}.${func};"
            BOTTOM+="\nConsole.log(\"\");"
            BOTTOM+="\n}\n"
          done
          ;;

        *)
          TOP+="\nimport $FULL_NAME;"
          for func in $(egrep -woh '[^\ ]+_specs\(\ *\)' "$FILE"); do
            BOTTOM+="\n\nConsole.log(\"=== $func ===\");"
            BOTTOM+="\n${FULL_NAME}.${func};"
            BOTTOM+="\nConsole.log(\"\");"
          done
          ;;
      esac
    done

    echo "$TOP" >> $SPECS
    echo "$BOTTOM" >> $SPECS
    echo "\nConsole.log(\"All specs PASSED.\");" >> $SPECS
    my_jspp __ ${=FILES} "$SPECS" -o tmp/specs.js

    sh_color ORANGE "=== {{Running}}..."
    node tmp/specs.js
    da_standard.jspp specs run-server
    sh_color GREEN "=== {{DONE}} ===";
    ;;

  *)
    echo "!!! Unknown arguments: $ORIGINAL_ARGS" >&2
    exit 1
    ;;
esac


