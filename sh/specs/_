#!/usr/bin/env zsh
#
# === {{CMD}}
#
set -u -e -o pipefail

local +x ORIGINAL_ARGS="$@"

if [[ -z "$@" ]]; then
  local +x ACTION="watch"
else
  local +x ACTION="$1"; shift
fi

spec_functions () {
  grep -Pio '^\ +(\w+)\ +\K(.+_specs)\(\ *\)' "$@"
}

case "$(echo $ACTION $@ | xargs echo)" in
  watch|"watch "*)
    export CONTROLLER_PID=$$
    local +x CMD="da_standard.jspp specs run $@"
    ${=CMD} || sh_color RED "=== {{FAILED}}: BOLD{{$?}}"
    process watch "-r scratch -r sh -r bin -r src -r specs" $CMD
    ;;

  "run "*)
    reset
    local +x FILE="$@"
    local +x SPECS="tmp/node.jspp"

    cd "$THIS_DIR"
    mkdir -p tmp
    sh_color ORANGE "=== {{Compiling}}..."
    echo "" > $SPECS

    local +x TOP="import System;";
    local +x BOTTOM="";

    for LIB_FILE in $(echo src/*.jspp) ; do
      local +x LIB_NAME="$(basename "$LIB_FILE" .jspp)"
      local +x FULL_NAME="DA_STANDARD.$(basename $FILE .jspp | tr '[a-z]' '[A-Z]')"
      if [[ "$LIB_NAME" == "$FILE" ]]; then
        TOP+="\nimport $FULL_NAME;"
        for func in $(spec_functions "$LIB_FILE"); do
          BOTTOM+="\n\nConsole.log(\"=== $func ===\");"
          BOTTOM+="\n${FULL_NAME}.${func};"
          BOTTOM+="\nConsole.log(\"\");"
        done
      fi
    done

    echo "$TOP" >> $SPECS
    echo "$BOTTOM" >> $SPECS
    my_jspp __ src/${FILE}.jspp src/common.jspp src/string.jspp src/specs.jspp "$SPECS" -o tmp/node.js

    sh_color ORANGE "=== {{Running}}..."
    node tmp/node.js
    sh_color GREEN "=== {{DONE}} ===";
    ;;

  run-server)
    mkdir -p tmp/out tmp/in
    local +x IN_FILE="specs/browser/server.cr"
    local +x OUT_FILE="tmp/out/da_standard.server"
    if my_fs a-is-younger-than-b "$IN_FILE" "$OUT_FILE" ; then
      sh_color ORANGE "=== {{Compiling}} server..."
      my_crystal __ build "$IN_FILE" -o "$OUT_FILE"
    else
      sh_color ORANGE "=== Skipping {{compiling}} server."
    fi

    pkill -f tmp/out/da_standard.server || :
    sh_color ORANGE "=== {{Running}} server..."
    tmp/out/da_standard.server &
    process loop every 1s max 4 or until curl --silent -I http://localhost:3010/ &>/dev/null
    touch tmp/do-reload
    sh_color GREEN "=== Server is {{running}} ===";
    ;;

  run)
    export IS_DEVELOPMENT="yes"
    CHANGED_FILE="${CHANGED_FILE:-}"
    reset
    if [[ "$CHANGED_FILE" == *"da_standard.cr" || "$CHANGED_FILE" == *".ecr" ]]; then
      sh_color GREEN "=== {{Compiling}} da_standard.cr"
      my_crystal __ build "src/da_standard.cr" -o tmp/da_standard
    fi

    local +x FILES="$(find src -maxdepth 1 -type f -name '*.jspp')"

    cd "$THIS_DIR"
    mkdir -p tmp/out

    sh_color ORANGE "=== {{Compiling}} js files..."

    tmp/da_standard write_specs
    my_jspp __ ${=FILES} "tmp/out/node.jspp" -o tmp/node.js
    my_jspp __ ${=FILES} "tmp/out/browser.jspp" -o tmp/browser.js

    my_jspp __ ${=FILES} "scratch/scratch.jspp" -o tmp/scratch.js

    sh_color ORANGE "=== {{Running}} on node..."
    node tmp/node.js

    da_standard.jspp specs run-server
    ;;

  *)
    echo "!!! Unknown arguments: $ORIGINAL_ARGS" >&2
    exit 1
    ;;
esac


