
external Error;
import System.Console;
import DA_STANDARD.COMMON;

module DA_STANDARD.SPECS
{

  void should_eq(expected, func) {
    var actual = func();

    if (actual != expected) {
      throw new Error(inspect(func) + " EXPECTED: " + inspect(expected) + " ACTUAL: " + inspect(actual));
    }

    Console.log("Pass: " + inspect(expected) + " == " + inspect(func) );
  }

  void should_eq(expected, func, ...args) {
    var actual = undefined;

    if (args.length == 0) {
      actual = func();
    } else {
      actual = func.apply(null, args);
    }

    if (actual != expected) {
      throw new Error(inspect(func) + " args: " + inspect(args) + " EXPECTED: " + inspect(expected) + " ACTUAL: " + inspect(actual));
    }

    Console.log("Pass: " + inspect(expected) + " == " + func.name + inspect(args));
  }

  void spec(f, args, expected) {
    var actual = f.apply(args);
    if (actual != expected) {
      throw new Error(f + "(" + args + ") expected: " + expected + " but got " + actual);
    }
    Console.log("Pass: " + f + "(" + args + ")");
  }

} // === DA_STANDARD.SPECS
