
import System;
import DA_STANDARD.SPECS;


module DA_STANDARD.STRING
{

  void length_specs() {
    should_eq(2, int () { return length( "  " ); } );
    should_eq(1, length, "a");
    should_eq(5, length, " abc ");
  }

  int length(string raw_v) {
    return raw_v.length;
  }

  void is_whitespace_specs() {
    should_eq(true, is_whitespace, "   ");
    should_eq(false, is_whitespace, "");
  }

  bool is_whitespace(string v) {
    var ans = v.match(/^\s+$/g);
    if (ans && (ans.length || 0) > 0)
      return true;
    return false;
  }

  void is_blank_specs() {
    should_eq(true,  is_blank, "");
    should_eq(true,  is_blank, "   ");
    should_eq(false, is_blank, " a  ");
  }

  bool is_blank(string v) {
    System.RegExp WHITE_SPACE_REGEX = /^\s+|\s+$/g;
    return length( v.replace(WHITE_SPACE_REGEX, '') ) < 1;
  }

  void is_empty_specs() {
    should_eq(true,  is_empty, "");
    should_eq(false, is_empty, "a");
    should_eq(false, is_empty, "  ");
  }

  bool is_empty(string v) {
    return v.length === 0;
  } // === func

  function standard_name_specs() {
    spec(standard_name, ['NAME NAME'], "name name");     // it 'lowercases names'
    spec(standard_name, ['  name  '],  'name');          // it 'trims string'
    spec(standard_name, ['n   aME'],   'n ame');         // it 'squeezes whitespace'
  }

  function standard_name(str) {
    return _.trim(str).replace(/\s+/g, ' ').toLowerCase();
  }

  function split_on_specs() {
    spec(split_on, [/;/, "a;b;c"], ['a', 'b', 'c']);
    spec(split_on, [/;/, "a;b;c"], ['a', 'b', 'c']);
    spec(split_on, [/;/, "a; ;c"], ['a', 'c']);
    spec(split_on('.'), ['form.id'], ['form', 'id']);
  }

  Array<string> split_on(pattern, string str) {
    str = trim(str);
    if (is_empty(str))
      return [];
    return compact( map_x(trim.split(pattern), function (x) {
      return !is_blank_string(x) && trim(x);
    }));
  }

  function split_on(pattern) {
    function _split_on_(str) {
      return split_on(pattern, str);
    }

    return _split_on_;
  }

} // === module DA_STANDARD

