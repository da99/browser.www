
import System;
external window, XMLHttpRequest, JSON, setInterval, setTimeout;

<% modules.each do |mod| %>
  import DA_STANDARD.<%= mod %>;
<% end -%>

<% spec_funcs.each do |func_name| %>
  THE_SPECS.push(
    "<%=func_name%>",
    DA_STANDARD.<%=func_name%>
  );
<% end -%>


function send(string meth, string path, o) {
  var xhr = new XMLHttpRequest();

  xhr.open(meth, path);
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.onload = function() {
    if (xhr.status !== 200) {
      window.alert('Request failed.  Returned status of ' + xhr.status);
    }
  };
  xhr.send(JSON.stringify(o));
} // === function post_msg

Console.log("JS file compiled at: <%= Time.now.to_s("%I:%M:%S %D") %>");

class PAGE_STATE {
  public static string m_time = "";
  public static bool keep_checking = true;
}

function reload_page() {
  if (!PAGE_STATE.keep_checking)
    return;

  var xhr = new XMLHttpRequest();

  xhr.open("GET", "/do-reload");
  xhr.setRequestHeader('Content-Type', 'application/json');
  xhr.onload = function() {
    if (xhr.status !== 200)
      return;

    string old = PAGE_STATE.m_time;
    if (old === "") {
      PAGE_STATE.m_time = xhr.response;
      return;
    }

    if (old !== xhr.response) {
      PAGE_STATE.keep_checking = true;
      window.location.reload(true);
    } else {
      PAGE_STATE.m_time = xhr.response;
    }
  };
  xhr.send(JSON.stringify("checking..."));
}

setInterval(reload_page, 500);

THE_SPECS.run(void () {
  window.document.querySelector("#THE_STAGE").innerHTML = "<div class=\"passed\">All specs <span class=\"passed\">PASSED</span>.</div>";
  Console.log("All specs PASSED.");
  send("POST", "/to-console", "All specs PASSED.");
}, void () {
  send("POST", "/to-console", "Specs FAILED.");
});


// try {
//     "use strict";
//   Dum_Dum_Boom_Boom.common.spec.spec(function (msg) {
//     alite({url: "/all-specs-pass", method: "POST", data: msg}).then(
//       function (result) {
//         var dt = new Date();
//         Dum_Dum_Boom_Boom.common.spec.spec.default_msg(msg);
//         Dum_Dum_Boom_Boom.common.base.log(dt.toLocaleString('en-US'));
//       }
//     ).catch(function (err) {
//       Dum_Dum_Boom_Boom.common.base.log(err);
//     });
//   });

// } catch (e) {

//   alite(
//     {
//       url: "/client-error-to-stdout",
//       method: "POST",
//       data: {
//         stack: e.stack,
//         message: e.message
//       }
//     }
//   );

//   throw e;
// }

