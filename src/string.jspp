
import System;
import DA_STANDARD.SPECS;
import System.Console;

module DA_STANDARD.STRING
{

  void is_whitespace_specs() {
    should_eq(true, bool () { return is_whitespace("   "); });
    should_eq(false,bool () { return is_whitespace("");    });
  }

  bool is_whitespace(string v) {
    var ans = v.match(/^\s+$/g);
    if (ans && (ans.length || 0) > 0)
      return true;
    return false;
  }

  void is_blank_specs() {
    should_eq(true,  bool () { return is_blank(""); });
    should_eq(true,  bool () { return is_blank("   "); });
    should_eq(false, bool () { return is_blank(" a  "); });
  }

  bool is_blank(string v) {
    System.RegExp WHITE_SPACE_REGEX = /^\s+|\s+$/g;
    return v.replace(WHITE_SPACE_REGEX, '').length < 1;
  }

  function trim_specs() {
    should_eq("a", string () { return trim(" a    "); });
    should_eq(['a', 'b', 'c'], string[] () { return trim("a;b;c".split(';')); });
    should_eq(['a', 'b', 'c'], string[] () { return trim("a ; b; ;  c".split(/;/)); });
    should_eq(['a', 'c'],      string[] () { return trim("a; ;;;c".split(/;/)); });
    should_eq(['form', 'id'],  string[] () { return trim('form.id'.split('.')); });
  }

  string trim(string raw) {
    return raw.replace(/^\s+|\s+$/g, "");
  }

  string[] trim(string[] raw) {
    int len        = raw.length;
    string[] fin   = [];
    string trimmed = "";
    for (int i = 0; i < len; i++) {
      trimmed = trim(raw[i]);
      if (trimmed.length !== 0)
        fin.push(trimmed);
    }
    return fin;
  }

  function standard_name_specs() {
    should_eq("name name", string () { return standard_name('NAME NAME'); });  // it 'lowercases names'
    should_eq("name",      string () { return standard_name('  name  '); });   // it 'trims string'
    should_eq("n ame",     string () { return standard_name('n   aME');  });   // it 'squeezes whitespace'
  }

  string standard_name(string str) {
    return trim(str.replace(/\s+/g, ' ')).toLowerCase();
  }

} // === module DA_STANDARD

